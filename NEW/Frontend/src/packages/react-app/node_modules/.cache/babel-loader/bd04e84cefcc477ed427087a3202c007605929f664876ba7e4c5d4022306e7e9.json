{"ast":null,"code":"import { useContext } from 'react';\nimport { MultiChainStatesContext } from '../providers';\nimport { useChainId } from './useChainId';\n/**\n * @public\n */\nexport function useChainState(queryParams = {}) {\n  const multiChainState = useContext(MultiChainStatesContext);\n  const chainId = useChainId({\n    queryParams\n  });\n  if (chainId === undefined) {\n    return undefined;\n  }\n  return Object.assign(Object.assign({}, multiChainState.chains[chainId]), {\n    dispatchCalls: multiChainState.dispatchCalls\n  });\n}","map":{"version":3,"names":["useContext","MultiChainStatesContext","useChainId","useChainState","queryParams","multiChainState","chainId","undefined","Object","assign","chains","dispatchCalls"],"sources":["C:\\Users\\win\\Downloads\\clone res gi\\clone\\my-eth-app\\node_modules\\@usedapp\\core\\src\\hooks\\useChainState.ts"],"sourcesContent":["import { useContext } from 'react'\nimport { QueryParams } from '../constants/type/QueryParams'\nimport { Action, MultiChainStatesContext, SingleChainState } from '../providers'\nimport { useChainId } from './useChainId'\n\n/**\n * @public\n */\nexport function useChainState(\n  queryParams: QueryParams = {}\n): (Partial<SingleChainState> & { dispatchCalls: (action: Action) => void }) | undefined {\n  const multiChainState = useContext(MultiChainStatesContext)\n  const chainId = useChainId({ queryParams })\n\n  if (chainId === undefined) {\n    return undefined\n  }\n\n  return {\n    ...multiChainState.chains[chainId],\n    dispatchCalls: multiChainState.dispatchCalls,\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAAiBC,uBAAuB,QAA0B,cAAc;AAChF,SAASC,UAAU,QAAQ,cAAc;AAEzC;;;AAGA,OAAM,SAAUC,aAAaA,CAC3BC,WAAA,GAA2B,EAAE;EAE7B,MAAMC,eAAe,GAAGL,UAAU,CAACC,uBAAuB,CAAC;EAC3D,MAAMK,OAAO,GAAGJ,UAAU,CAAC;IAAEE;EAAW,CAAE,CAAC;EAE3C,IAAIE,OAAO,KAAKC,SAAS,EAAE;IACzB,OAAOA,SAAS;;EAGlB,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKJ,eAAe,CAACK,MAAM,CAACJ,OAAO,CAAC;IAClCK,aAAa,EAAEN,eAAe,CAACM;EAAa;AAEhD"},"metadata":{},"sourceType":"module","externalDependencies":[]}