{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { providers } from 'ethers';\nimport { getAddress } from 'ethers/lib/utils';\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { useConfig, useLocalStorage, useReadonlyNetwork } from '../../../hooks';\nimport { useReadonlyNetworkStates } from '../readonlyNetworks/context';\nimport { ConnectorController } from './connectorController';\nimport { InjectedConnector } from './implementations';\nconst Provider = providers.Provider;\nconst getAccount = connector => {\n  if (connector === null || connector === void 0 ? void 0 : connector.accounts[0]) {\n    return getAddress(connector.accounts[0]);\n  }\n  return undefined;\n};\nexport const ConnectorContext = createContext({\n  connector: undefined,\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  activate: async () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  deactivate: () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  activateBrowserWallet: () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  reportError: () => {},\n  isLoading: true,\n  setError: () => {\n    throw new Error('Function not implemented.');\n  },\n  active: false,\n  switchNetwork: () => {\n    throw new Error('Function not implemented.');\n  }\n});\nexport function ConnectorContextProvider({\n  children\n}) {\n  var _a;\n  const [controller, setController] = useState();\n  const [isLoading, setLoading] = useState(true);\n  const config = useConfig();\n  const {\n    connectors,\n    autoConnect\n  } = config;\n  const [autoConnectTag, setAutoConnectTag] = useLocalStorage('usedapp:autoConnectTag');\n  const activate = useCallback(async (providerOrConnector, {\n    silently,\n    onSuccess\n  } = {\n    silently: false\n  }) => {\n    let controller;\n    if ('activate' in providerOrConnector) {\n      controller = new ConnectorController(providerOrConnector, config);\n    } else {\n      const wrappedProvider = Provider.isProvider(providerOrConnector) ? providerOrConnector : new providers.Web3Provider(providerOrConnector);\n      controller = new ConnectorController(new InjectedConnector(wrappedProvider), config);\n    }\n    setLoading(true);\n    setController(controller);\n    try {\n      if (silently) {\n        await controller.activate(connector => connector.connectEagerly());\n      } else {\n        await controller.activate();\n      }\n      setLoading(false);\n      onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();\n    } catch (error) {\n      controller.reportError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [setController, setLoading]);\n  const activateBrowserWallet = useCallback(async options => {\n    // done for backward compatibility.\n    // If the options object looks like an event object or is undefined,\n    // it's not a valid option and will be ignored\n    if (!options || typeof options.preventDefault === 'function') {\n      options = {\n        type: 'metamask'\n      };\n    }\n    const {\n      type\n    } = options;\n    if (!connectors[type]) {\n      throw new Error(`Connector ${type} is not configured`);\n    }\n    await activate(connectors[type], {\n      onSuccess: () => {\n        setAutoConnectTag(type);\n      }\n    });\n  }, [activate, setAutoConnectTag, connectors]);\n  const deactivate = useCallback(async () => {\n    setAutoConnectTag(undefined);\n    setLoading(true);\n    setController(undefined);\n    await (controller === null || controller === void 0 ? void 0 : controller.deactivate());\n    setLoading(false);\n  }, [controller]);\n  const reportError = useCallback(err => {\n    controller === null || controller === void 0 ? void 0 : controller.reportError(err);\n  }, [controller]);\n  const switchNetwork = useCallback(async chainId => {\n    await (controller === null || controller === void 0 ? void 0 : controller.switchNetwork(chainId));\n  }, [controller]);\n  const setErrorDeprecated = useCallback(() => {\n    throw new Error('setError is deprecated');\n  }, []);\n  const ethersActivate = useCallback(async providerOrConnector => {\n    if ('getProvider' in providerOrConnector) {\n      console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n      await providerOrConnector.activate();\n      return activate(await providerOrConnector.getProvider());\n    }\n    return activate(providerOrConnector);\n  }, []);\n  useEffect(() => {\n    if (autoConnect && autoConnectTag && connectors[autoConnectTag]) {\n      void activate(connectors[autoConnectTag], {\n        silently: true\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    controller === null || controller === void 0 ? void 0 : controller.updateConfig(config);\n  }, [controller, config]);\n  const readonlyNetwork = useReadonlyNetwork();\n  const [errors, setErrors] = useState((_a = controller === null || controller === void 0 ? void 0 : controller.errors) !== null && _a !== void 0 ? _a : []);\n  const [account, setAccount] = useState(getAccount(controller));\n  const [provider, setProvider] = useState(controller === null || controller === void 0 ? void 0 : controller.getProvider());\n  const [chainId, setChainId] = useState(controller === null || controller === void 0 ? void 0 : controller.chainId);\n  useEffect(() => {\n    if (!(controller === null || controller === void 0 ? void 0 : controller.getProvider())) {\n      setAccount(undefined);\n      setProvider(readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider);\n      setChainId(readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId);\n      setErrors([]);\n    } else {\n      setChainId(controller.chainId);\n      setErrors(controller.errors);\n      setProvider(controller.getProvider());\n      setAccount(getAccount(controller));\n    }\n    return controller === null || controller === void 0 ? void 0 : controller.updated.on(({\n      chainId,\n      errors,\n      accounts\n    }) => {\n      if (chainId) {\n        setChainId(chainId);\n        setProvider(controller.getProvider());\n        if (accounts[0]) {\n          setAccount(getAddress(accounts[0]));\n        } else {\n          setAccount(undefined);\n        }\n      }\n      setErrors([...errors]);\n    });\n  }, [controller, controller === null || controller === void 0 ? void 0 : controller.getProvider(), readonlyNetwork]);\n  const {\n    networks,\n    readOnlyUrls\n  } = useConfig();\n  const [error, setError] = useState(undefined);\n  const networkStates = useReadonlyNetworkStates();\n  const configuredChainIds = Object.keys(readOnlyUrls || {}).map(chainId => parseInt(chainId, 10));\n  const supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map(network => network.chainId);\n  useEffect(() => {\n    const isNotConfiguredChainId = chainId && configuredChainIds && configuredChainIds.indexOf(chainId) < 0;\n    const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n    if (isUnsupportedChainId || isNotConfiguredChainId) {\n      const chainIdError = new Error(`${isUnsupportedChainId ? 'Unsupported' : 'Not configured'} chain id: ${chainId}.`);\n      chainIdError.name = 'ChainIdError';\n      setError(chainIdError);\n      return;\n    }\n    for (const networkState of Object.values(networkStates)) {\n      if (networkState.errors.length > 0) {\n        setError(networkState.errors[networkState.errors.length - 1]);\n        return;\n      }\n    }\n    setError(errors === null || errors === void 0 ? void 0 : errors[errors.length - 1]);\n  }, [chainId, errors, networkStates]);\n  return _jsx(ConnectorContext.Provider, Object.assign({\n    value: {\n      connector: controller,\n      deactivate,\n      reportError,\n      activate: ethersActivate,\n      activateBrowserWallet,\n      isLoading,\n      account,\n      library: provider,\n      chainId: (error === null || error === void 0 ? void 0 : error.name) === 'ChainIdError' ? undefined : provider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n      error,\n      active: !!provider,\n      switchNetwork,\n      setError: setErrorDeprecated\n    }\n  }, {\n    children: children\n  }));\n}\nexport const useConnector = () => useContext(ConnectorContext);","map":{"version":3,"names":["providers","getAddress","createContext","useCallback","useContext","useEffect","useState","useConfig","useLocalStorage","useReadonlyNetwork","useReadonlyNetworkStates","ConnectorController","InjectedConnector","Provider","getAccount","connector","accounts","undefined","ConnectorContext","activate","deactivate","activateBrowserWallet","reportError","isLoading","setError","Error","active","switchNetwork","ConnectorContextProvider","children","controller","setController","setLoading","config","connectors","autoConnect","autoConnectTag","setAutoConnectTag","providerOrConnector","silently","onSuccess","wrappedProvider","isProvider","Web3Provider","connectEagerly","error","options","preventDefault","type","err","chainId","setErrorDeprecated","ethersActivate","console","warn","getProvider","updateConfig","readonlyNetwork","errors","setErrors","_a","account","setAccount","provider","setProvider","setChainId","updated","on","networks","readOnlyUrls","networkStates","configuredChainIds","Object","keys","map","parseInt","supportedChainIds","network","isNotConfiguredChainId","indexOf","isUnsupportedChainId","chainIdError","name","networkState","values","length","_jsx","assign","value","library","useConnector"],"sources":["C:\\Users\\win\\Downloads\\clone res gi\\clone\\my-eth-app\\node_modules\\@usedapp\\core\\src\\providers\\network\\connectors\\context.tsx"],"sourcesContent":["import { providers } from 'ethers'\nimport { getAddress } from 'ethers/lib/utils'\nimport { createContext, ReactNode, useCallback, useContext, useEffect, useState } from 'react'\nimport { useConfig, useLocalStorage, useReadonlyNetwork } from '../../../hooks'\nimport { useReadonlyNetworkStates } from '../readonlyNetworks/context'\nimport { Connector } from './connector'\nimport { ConnectorController } from './connectorController'\nimport { InjectedConnector } from './implementations'\n\ntype JsonRpcProvider = providers.JsonRpcProvider\ntype ExternalProvider = providers.ExternalProvider\ntype FallBackProvider = providers.FallbackProvider\nconst Provider = providers.Provider\ntype Web3Provider = providers.Web3Provider\n\nexport type ActivateBrowserWallet = (arg?: { type: string }) => void\n\ntype MaybePromise<T> = Promise<T> | T\n\ntype SupportedProviders =\n  | JsonRpcProvider\n  | ExternalProvider\n  | { getProvider: () => MaybePromise<JsonRpcProvider | ExternalProvider>; activate: () => Promise<any> }\n  | Connector\n\nexport type Web3Ethers = {\n  activate: (provider: SupportedProviders) => Promise<void>\n  /**\n   * @deprecated\n   */\n  setError: (error: Error) => void\n  deactivate: () => void\n  chainId?: number\n  account?: string\n  error?: Error\n  library?: JsonRpcProvider | FallBackProvider\n  active: boolean\n  activateBrowserWallet: ActivateBrowserWallet\n  isLoading: boolean\n  /**\n   * Switch to a different network.\n   */\n  switchNetwork: (chainId: number) => Promise<void>\n}\n\nconst getAccount = (connector: ConnectorController | undefined) => {\n  if (connector?.accounts[0]) {\n    return getAddress(connector.accounts[0])\n  }\n  return undefined\n}\n\ninterface ConnectorContextValue extends Web3Ethers {\n  connector: ConnectorController | undefined\n  deactivate: () => void\n  activateBrowserWallet: ActivateBrowserWallet\n  reportError: (error: Error) => void\n  isLoading: boolean\n}\n\nexport const ConnectorContext = createContext<ConnectorContextValue>({\n  connector: undefined,\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  activate: async () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  deactivate: () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  activateBrowserWallet: () => {},\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  reportError: () => {},\n  isLoading: true,\n  setError: () => {\n    throw new Error('Function not implemented.')\n  },\n  active: false,\n  switchNetwork: () => {\n    throw new Error('Function not implemented.')\n  },\n})\n\nexport interface ConnectorContextProviderProps {\n  children?: ReactNode\n}\n\nexport interface ActivateOptions {\n  silently?: boolean\n  onSuccess?: () => void\n}\n\nexport function ConnectorContextProvider({ children }: ConnectorContextProviderProps) {\n  const [controller, setController] = useState<ConnectorController>()\n  const [isLoading, setLoading] = useState(true)\n  const config = useConfig()\n  const { connectors, autoConnect } = config\n  const [autoConnectTag, setAutoConnectTag] = useLocalStorage('usedapp:autoConnectTag')\n\n  const activate = useCallback(\n    async (\n      providerOrConnector: JsonRpcProvider | ExternalProvider | Connector,\n      { silently, onSuccess }: ActivateOptions = { silently: false }\n    ) => {\n      let controller: ConnectorController\n      if ('activate' in providerOrConnector) {\n        controller = new ConnectorController(providerOrConnector, config as any)\n      } else {\n        const wrappedProvider = Provider.isProvider(providerOrConnector)\n          ? providerOrConnector\n          : new providers.Web3Provider(providerOrConnector)\n        controller = new ConnectorController(new InjectedConnector(wrappedProvider), config as any)\n      }\n      setLoading(true)\n      setController(controller)\n      try {\n        if (silently) {\n          await controller.activate((connector) => connector.connectEagerly())\n        } else {\n          await controller.activate()\n        }\n\n        setLoading(false)\n        onSuccess?.()\n      } catch (error) {\n        controller.reportError(error as any)\n      } finally {\n        setLoading(false)\n      }\n    },\n    [setController, setLoading]\n  )\n\n  const activateBrowserWallet: ActivateBrowserWallet = useCallback(\n    async (options) => {\n      // done for backward compatibility.\n      // If the options object looks like an event object or is undefined,\n      // it's not a valid option and will be ignored\n      if (!options || typeof (options as any).preventDefault === 'function') {\n        options = { type: 'metamask' }\n      }\n      const { type } = options\n      if (!connectors[type]) {\n        throw new Error(`Connector ${type} is not configured`)\n      }\n      await activate(connectors[type], {\n        onSuccess: () => {\n          setAutoConnectTag(type)\n        },\n      })\n    },\n    [activate, setAutoConnectTag, connectors]\n  )\n\n  const deactivate = useCallback(async () => {\n    setAutoConnectTag(undefined)\n    setLoading(true)\n    setController(undefined)\n    await controller?.deactivate()\n    setLoading(false)\n  }, [controller])\n\n  const reportError: ConnectorContextValue['reportError'] = useCallback(\n    (err) => {\n      controller?.reportError(err)\n    },\n    [controller]\n  )\n\n  const switchNetwork = useCallback(\n    async (chainId: number) => {\n      await controller?.switchNetwork(chainId)\n    },\n    [controller]\n  )\n\n  const setErrorDeprecated = useCallback(() => {\n    throw new Error('setError is deprecated')\n  }, [])\n\n  const ethersActivate = useCallback(async (providerOrConnector: SupportedProviders) => {\n    if ('getProvider' in providerOrConnector) {\n      console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.')\n      await providerOrConnector.activate()\n      return activate(await providerOrConnector.getProvider())\n    }\n    return activate(providerOrConnector)\n  }, [])\n\n  useEffect(() => {\n    if (autoConnect && autoConnectTag && connectors[autoConnectTag]) {\n      void activate(connectors[autoConnectTag], {\n        silently: true,\n      })\n    } else {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    controller?.updateConfig(config)\n  }, [controller, config])\n\n  const readonlyNetwork = useReadonlyNetwork()\n\n  const [errors, setErrors] = useState<Error[]>(controller?.errors ?? [])\n  const [account, setAccount] = useState<string | undefined>(getAccount(controller))\n  const [provider, setProvider] = useState<JsonRpcProvider | Web3Provider | FallBackProvider | undefined>(\n    controller?.getProvider()\n  )\n  const [chainId, setChainId] = useState<number | undefined>(controller?.chainId)\n\n  useEffect(() => {\n    if (!controller?.getProvider()) {\n      setAccount(undefined)\n      setProvider(readonlyNetwork?.provider as JsonRpcProvider | FallBackProvider | undefined)\n      setChainId(readonlyNetwork?.chainId)\n      setErrors([])\n    } else {\n      setChainId(controller.chainId)\n      setErrors(controller.errors)\n      setProvider(controller.getProvider())\n      setAccount(getAccount(controller))\n    }\n\n    return controller?.updated.on(({ chainId, errors, accounts }) => {\n      if (chainId) {\n        setChainId(chainId)\n        setProvider(controller.getProvider())\n        if (accounts[0]) {\n          setAccount(getAddress(accounts[0]))\n        } else {\n          setAccount(undefined)\n        }\n      }\n      setErrors([...errors])\n    })\n  }, [controller, controller?.getProvider(), readonlyNetwork])\n\n  const { networks, readOnlyUrls } = useConfig()\n  const [error, setError] = useState<Error | undefined>(undefined)\n\n  const networkStates = useReadonlyNetworkStates()\n\n  const configuredChainIds = Object.keys(readOnlyUrls || {}).map((chainId) => parseInt(chainId, 10))\n  const supportedChainIds = networks?.map((network) => network.chainId)\n\n  useEffect(() => {\n    const isNotConfiguredChainId = chainId && configuredChainIds && configuredChainIds.indexOf(chainId) < 0\n    const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0\n\n    if (isUnsupportedChainId || isNotConfiguredChainId) {\n      const chainIdError = new Error(`${isUnsupportedChainId ? 'Unsupported' : 'Not configured'} chain id: ${chainId}.`)\n      chainIdError.name = 'ChainIdError'\n      setError(chainIdError)\n      return\n    }\n\n    for (const networkState of Object.values(networkStates)) {\n      if (networkState.errors.length > 0) {\n        setError(networkState.errors[networkState.errors.length - 1])\n        return\n      }\n    }\n\n    setError(errors?.[errors.length - 1])\n  }, [chainId, errors, networkStates])\n\n  return (\n    <ConnectorContext.Provider\n      value={{\n        connector: controller,\n        deactivate,\n        reportError,\n        activate: ethersActivate,\n        activateBrowserWallet,\n        isLoading,\n        account,\n        library: provider,\n        chainId:\n          error?.name === 'ChainIdError' ? undefined : provider !== undefined ? chainId : readonlyNetwork?.chainId,\n        error,\n        active: !!provider,\n        switchNetwork,\n        setError: setErrorDeprecated,\n      }}\n    >\n      {children}\n    </ConnectorContext.Provider>\n  )\n}\n\nexport const useConnector = () => useContext(ConnectorContext)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}