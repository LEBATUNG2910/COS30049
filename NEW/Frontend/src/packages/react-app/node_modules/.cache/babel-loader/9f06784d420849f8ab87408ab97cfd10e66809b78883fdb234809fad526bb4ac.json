{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useReducer } from 'react';\nimport pickBy from 'lodash.pickby';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { ConfigContext } from './context';\nimport { configReducer } from './reducer';\n/**\n * We strip supplied config of undefined fields because it can easily break TS assumptions.\n *\n * Illustrative example:\n *\n * type FullConf = { something: string }\n * type PartConf = Partial<FullConf>\n *\n * const defaultConf: FullConf = { something: 'default' }\n * const suppliedConf: PartConf = { something: undefined }\n * const conf: FullConf = {...defaultConf, ...suppliedConf}\n * conf.something.toString() // OK according to TS, breaks on runtime.\n */\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nconst noUndefined = x => x !== undefined;\nexport function ConfigProvider({\n  config,\n  children\n}) {\n  var _a;\n  const configWithDefaults = Object.assign(Object.assign(Object.assign({}, DEFAULT_CONFIG), pickBy(config, noUndefined)), {\n    bufferGasLimitPercentage: undefined,\n    gasLimitBufferPercentage: (_a = config.gasLimitBufferPercentage) !== null && _a !== void 0 ? _a : config.bufferGasLimitPercentage,\n    notifications: Object.assign(Object.assign({}, DEFAULT_CONFIG.notifications), pickBy(config.notifications, noUndefined))\n  });\n  const [reducedConfig, dispatch] = useReducer(configReducer, configWithDefaults);\n  return _jsx(ConfigContext.Provider, {\n    value: {\n      config: reducedConfig,\n      updateConfig: dispatch\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["useReducer","pickBy","DEFAULT_CONFIG","ConfigContext","configReducer","noUndefined","x","undefined","ConfigProvider","config","children","configWithDefaults","Object","assign","bufferGasLimitPercentage","gasLimitBufferPercentage","_a","notifications","reducedConfig","dispatch","_jsx","Provider","value","updateConfig"],"sources":["C:\\Users\\win\\Downloads\\clone res gi\\clone\\my-eth-app\\node_modules\\@usedapp\\core\\src\\providers\\config\\provider.tsx"],"sourcesContent":["import { ReactNode, useReducer } from 'react'\nimport pickBy from 'lodash.pickby'\nimport { Config, FullConfig } from '../../constants'\nimport { DEFAULT_CONFIG } from '../../model/config/default'\nimport { ConfigContext } from './context'\nimport { configReducer } from './reducer'\n\ninterface ConfigProviderProps {\n  children: ReactNode\n  config: Config\n}\n\n/**\n * We strip supplied config of undefined fields because it can easily break TS assumptions.\n *\n * Illustrative example:\n *\n * type FullConf = { something: string }\n * type PartConf = Partial<FullConf>\n *\n * const defaultConf: FullConf = { something: 'default' }\n * const suppliedConf: PartConf = { something: undefined }\n * const conf: FullConf = {...defaultConf, ...suppliedConf}\n * conf.something.toString() // OK according to TS, breaks on runtime.\n */\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nconst noUndefined = (x: any) => x !== undefined\nexport function ConfigProvider({ config, children }: ConfigProviderProps) {\n  const configWithDefaults: FullConfig = {\n    ...DEFAULT_CONFIG,\n    ...pickBy(config, noUndefined),\n    bufferGasLimitPercentage: undefined,\n    gasLimitBufferPercentage: config.gasLimitBufferPercentage ?? config.bufferGasLimitPercentage,\n    notifications: {\n      ...DEFAULT_CONFIG.notifications,\n      ...pickBy(config.notifications, noUndefined),\n    },\n  }\n  const [reducedConfig, dispatch] = useReducer(configReducer, configWithDefaults)\n  return <ConfigContext.Provider value={{ config: reducedConfig, updateConfig: dispatch }} children={children} />\n}\n"],"mappings":";AAAA,SAAoBA,UAAU,QAAQ,OAAO;AAC7C,OAAOC,MAAM,MAAM,eAAe;AAElC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,aAAa,QAAQ,WAAW;AAOzC;;;;;;;;;;;;;AAcA;;;AAGA,MAAMC,WAAW,GAAIC,CAAM,IAAKA,CAAC,KAAKC,SAAS;AAC/C,OAAM,SAAUC,cAAcA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAuB;;EACtE,MAAMC,kBAAkB,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACnBX,cAAc,GACdD,MAAM,CAACQ,MAAM,EAAEJ,WAAW,CAAC;IAC9BS,wBAAwB,EAAEP,SAAS;IACnCQ,wBAAwB,EAAE,CAAAC,EAAA,GAAAP,MAAM,CAACM,wBAAwB,cAAAC,EAAA,cAAAA,EAAA,GAAIP,MAAM,CAACK,wBAAwB;IAC5FG,aAAa,EAAAL,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACRX,cAAc,CAACe,aAAa,GAC5BhB,MAAM,CAACQ,MAAM,CAACQ,aAAa,EAAEZ,WAAW,CAAC;EAAA,EAE/C;EACD,MAAM,CAACa,aAAa,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACI,aAAa,EAAEO,kBAAkB,CAAC;EAC/E,OAAOS,IAAA,CAACjB,aAAa,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEb,MAAM,EAAES,aAAa;MAAEK,YAAY,EAAEJ;IAAQ,CAAE;IAAET,QAAQ,EAAEA;EAAQ,EAAI;AACjH"},"metadata":{},"sourceType":"module","externalDependencies":[]}